{"version":3,"sources":["components/Controls/LeftSideControls/LeftSideControls.module.css","components/Auth/Auth.module.css","App.module.css","components/PostsWall/PostsWall.module.css","components/Controls/FixedControls/FixedControls.module.css","components/ScrollTopBtn/ScrollTopBtn.module.css","components/Header/assets/user.jpg","redux/hooks.ts","redux/authSlice.tsx","redux/modalsSlice.tsx","components/Header/Header.tsx","components/PostsWall/Post/Comments/assets/user.jpg","api/api.ts","redux/postsSlice.tsx","components/PostsWall/Post/Comments/Comments.tsx","components/PostsWall/Post/Post.tsx","components/PostsWall/PostsWall.tsx","components/Auth/SignIn/SignIn.tsx","components/Auth/SignUp/SignUp.tsx","components/Auth/Auth.tsx","components/ScrollTopBtn/ScrollTopBtn.tsx","components/Controls/Controls.tsx","components/Controls/FixedControls/FixedControls.tsx","components/Controls/LeftSideControls/LeftSideControls.tsx","App.tsx","redux/store.ts","index.tsx","components/PostsWall/Post/Post.module.css","components/PostsWall/Post/Comments/Comments.module.css","components/Header/Header.module.css","components/Controls/Controls.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","authSlice","createSlice","name","initialState","firstname","lastname","isAuth","reducers","setAuthData","state","action","payload","actions","authReducer","reducer","modalsSlice","signUp","isOpen","signIn","controls","setSignUpIsOpen","setSignInIsOpen","setControlsIsOpen","extraReducers","builder","addCase","modalsReducer","Header","auth","className","styles","header","fixedHeader","headerContainer","logo","rightPanel","BurgerMenu","dispatch","burgerMenu","onClick","UserBar","userBar","userInfo","userAvatar","src","alt","AuthBar","authBar","authBtn","postsApi","getPosts","quantity","Promise","all","this","getRandomUsers","getRandomContentPhotos","then","result","posts","users","photos","i","push","author","contentImageUrl","id","Math","random","fetch","r","json","randomUsers","results","forEach","randomUser","first","last","avatarUrl","picture","large","login","uuid","requests","responses","images","response","url","requestPosts","createAsyncThunk","thunkApi","getState","totalPostsCountIsExceeded","length","hiddenPosts","clearOld","postsSlice","autoUpload","autoUpdate","setAutoUpload","setAutoUpdate","setClearOld","showHiddenPosts","removePost","filter","post","fulfilled","postsLength","totalPostsLength","removeLast","splice","postsReducer","Comments","React","memo","commentsIsShow","setShowComments","comments","addComment","userName","hideComments","commentsHolder","map","comment","index","onCommentFieldFocus","Comment","commentsAvatarWrapper","commentAvatar","commentsAvatar","commentBody","commentUsername","commentText","WriteComment","writeComment","initialValues","onSubmit","values","resetForm","setFieldError","setTimeout","commentForm","commentFormInput","onFocus","type","placeholder","msg","errorMessage","commentFormButton","Post","postId","avatar","contentImage","useState","getRandomCeilInt","likes","setLikes","likedByMe","setLikedByMe","views","setViews","min","max","ceil","floor","useEffect","LikesTimerId","setInterval","ViewsTimerId","clearInterval","postHeader","postUserPhoto","postInfo","postCreatorName","postCreationDate","closeBtn","postContent","postContentImage","postActivities","postActivity","postActivityIcon","likeCount","commentCount","viewsCount","PostsWall","timerId","postsWall","onShowNewPostsClick","hiddenPostsLength","ShowNewPosts","showNewPosts","SignIn","password","title","inputWrapper","input","submit","SignUp","toUpperCase","slice","validate","errors","message","Auth","signUpIsOpen","modals","signInIsOpen","overlay","e","target","currentTarget","ScrollTopBtn","isShow","showButton","window","addEventListener","pageYOffset","scrollTopBtn","document","body","scrollTop","documentElement","Controls","FeedControls","controlsTitle","controlName","isActive","onControlClick","Control","control","controlLabel","Toggle","roundClassNames","round","roundSwitchedOn","toggle","AppInfo","onScreenPostsLength","value","InfoField","infoField","FixedControls","children","container","fixedControls","LeftSideControls","overlayStyles","open","wrapper","App","feed","feedContainer","store","configureStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a85b92f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"LeftSideControls_overlay__PPMbH\",\"wrapper\":\"LeftSideControls_wrapper__3k4b_\",\"open\":\"LeftSideControls_open__107sJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Auth_overlay__3M_T6\",\"signUp\":\"Auth_signUp__1uAT5\",\"title\":\"Auth_title__i9wAD\",\"inputWrapper\":\"Auth_inputWrapper__2Acdx\",\"input\":\"Auth_input__3S_7x\",\"submit\":\"Auth_submit__1HBju\",\"errorMessage\":\"Auth_errorMessage__2kp6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3H_6h\",\"feedContainer\":\"App_feedContainer__2bCc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWall\":\"PostsWall_postsWall__3HJuy\",\"showNewPosts\":\"PostsWall_showNewPosts__1ODxM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FixedControls_container__1vgVr\",\"fixedControls\":\"FixedControls_fixedControls__2ABI3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollTopBtn\":\"ScrollTopBtn_scrollTopBtn__1mqKu\"};","export default __webpack_public_path__ + \"static/media/user.1775f3e4.jpg\";","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\r\nimport { AppDispatch, RootState } from \"./store\"\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    firstname: null as string | null,\r\n    lastname: null as string | null,\r\n    isAuth: false\r\n}\r\n\r\ninterface ISignUpDataActionPayload {\r\n    firstname: string\r\n    lastname: string\r\n}\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        setAuthData: (state, action: PayloadAction<ISignUpDataActionPayload>) => {\r\n            state.firstname = action.payload.firstname\r\n            state.lastname = action.payload.lastname\r\n            state.isAuth = true\r\n        },\r\n    }\r\n})\r\n\r\nexport const { setAuthData } = authSlice.actions\r\n\r\nexport const authReducer = authSlice.reducer","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { setAuthData } from \"./authSlice\";\r\n\r\nconst initialState = {\r\n    signUp: {\r\n        isOpen: false\r\n    },\r\n    signIn: {\r\n        isOpen: false\r\n    },\r\n    controls: {\r\n        isOpen: false\r\n    }\r\n}\r\n\r\nexport const modalsSlice = createSlice({\r\n    name: 'modals',\r\n    initialState,\r\n    reducers: {\r\n        setSignUpIsOpen: (state, action: PayloadAction<boolean>) => {\r\n            state.signUp.isOpen = action.payload\r\n        },\r\n        setSignInIsOpen: (state, action: PayloadAction<boolean>) => {\r\n            state.signIn.isOpen = action.payload\r\n        },\r\n        setControlsIsOpen: (state) => {\r\n            state.controls.isOpen = !state.controls.isOpen\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(setAuthData, (state, action) => {\r\n                state.signUp.isOpen = false\r\n            })\r\n    }\r\n})\r\n\r\nexport const { setSignInIsOpen, setSignUpIsOpen, setControlsIsOpen } = modalsSlice.actions\r\n\r\nexport const modalsReducer = modalsSlice.reducer","import styles from './Header.module.css'\r\nimport userAvatar from './assets/user.jpg'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { setControlsIsOpen, setSignInIsOpen, setSignUpIsOpen } from '../../redux/modalsSlice'\r\nimport React from 'react'\r\n\r\nexport const Header: React.FC<{}> = () => {\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className={styles.fixedHeader}>\r\n                <div className={styles.headerContainer}>\r\n                    <BurgerMenu />\r\n                    <div className={styles.logo}>LazyFeed</div>\r\n                    <div className={styles.rightPanel}>\r\n                        {isAuth ? <UserBar /> : <AuthBar />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst BurgerMenu: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onBurgerMenuClick = () => {\r\n        dispatch(setControlsIsOpen())\r\n    }\r\n\r\n    return (\r\n        <div className={styles.burgerMenu} onClick={onBurgerMenuClick}>\r\n            <i className='fas fa-bars' />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst UserBar: React.FC<{}> = () => {\r\n    const {firstname, lastname} = useAppSelector(state => state.auth)\r\n\r\n    return (\r\n        <div className={styles.userBar}>\r\n            <ul className={styles.userInfo}>\r\n                <li>{firstname}</li>\r\n                <li>{lastname}</li>\r\n            </ul>\r\n            <img className={styles.userAvatar} src={userAvatar} alt=\"user avatar\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AuthBar: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onSignUpClick = () => {\r\n        dispatch(setSignUpIsOpen(true))\r\n    }\r\n\r\n    const onSignInClick = () => {\r\n        dispatch(setSignInIsOpen(true))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.authBar}>\r\n            <button className={styles.authBtn} onClick={onSignInClick}>Log In</button>\r\n            <button className={styles.authBtn} onClick={onSignUpClick}>Sign Up</button>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/user.1775f3e4.jpg\";","import { Author, PostType } from \"../redux/postsSlice\"\r\n\r\ninterface RandomUsers {\r\n    info: {\r\n        page: number\r\n        results: number\r\n        seed: string\r\n        version: string\r\n    }\r\n    results: Array<RandomUser>\r\n}\r\n\r\ninterface RandomUser {\r\n    name: {\r\n        first: string\r\n        last: string\r\n        title: string\r\n    }\r\n    picture: {\r\n        large: string\r\n        medium: string\r\n        thumbnail: string\r\n    }\r\n    login: {\r\n        uuid: string\r\n    }\r\n    [key: string]: any\r\n}\r\n\r\n\r\n\r\nexport const postsApi = {\r\n    getPosts(quantity: number) {\r\n        return Promise.all([this.getRandomUsers(quantity), this.getRandomContentPhotos(quantity)])\r\n            .then(result => {\r\n                let posts: Array<PostType> = []\r\n                let [users, photos] = result;\r\n                for (let i = 0; i < quantity; i++) {\r\n                    posts.push({author: users[i], contentImageUrl: photos[i], id: Math.random()})\r\n                }\r\n                return posts\r\n            })\r\n    },\r\n    getRandomUsers(quantity: number) {\r\n        return fetch(`https://randomuser.me/api/?results=${quantity}&inc=name,picture,login`)\r\n        .then(r => r.json())\r\n        .then((randomUsers: RandomUsers) => {\r\n            let users: Array<Author> = []\r\n            randomUsers.results.forEach((randomUser) => {\r\n                users.push({\r\n                    firstname: randomUser.name.first,\r\n                    lastname: randomUser.name.last,\r\n                    avatarUrl: randomUser.picture.large,\r\n                    id: randomUser.login.uuid\r\n                })\r\n            })\r\n            return users\r\n        })\r\n    },\r\n    getRandomContentPhotos(quantity: number) {\r\n        let requests = []\r\n        for (let i = 0 ; i < quantity; i++) {\r\n            requests.push(fetch('https://picsum.photos/500/600'));\r\n        }\r\n        return Promise.all(requests)\r\n            .then(responses => {\r\n                let images: Array<string> = [];\r\n                responses.forEach(response => images.push(response.url));\r\n                return images;\r\n            })\r\n    }\r\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { postsApi } from \"../api/api\"\r\nimport { AppDispatch, RootState } from \"./store\"\r\n\r\ninterface InitialState {\r\n    posts: Array<PostType>\r\n    hiddenPosts: Array<PostType>\r\n    autoUpload: boolean\r\n    autoUpdate: boolean\r\n    clearOld: boolean\r\n}\r\n\r\nexport interface PostType {\r\n    author: Author\r\n    contentImageUrl: string\r\n    id: number\r\n}\r\n\r\nexport interface Author {\r\n    firstname: string\r\n    lastname: string\r\n    avatarUrl: string\r\n    id: string\r\n}\r\n\r\nconst initialState: InitialState = {\r\n    posts: [] as Array<PostType>,\r\n    hiddenPosts: [] as Array<PostType>,\r\n    autoUpload: false,\r\n    autoUpdate: true,\r\n    clearOld: true\r\n}\r\n\r\nexport const requestPosts = createAsyncThunk<Array<PostType>, number, {dispatch: AppDispatch, state: RootState}>(\r\n    'posts/requestPosts',\r\n    (quantity, thunkApi) => {\r\n        const state = thunkApi.getState()\r\n        const totalPostsCountIsExceeded = state.posts.posts.length + state.posts.hiddenPosts.length >= 50\r\n\r\n        if (!state.posts.clearOld && totalPostsCountIsExceeded) {\r\n            return []\r\n        }\r\n\r\n        return postsApi.getPosts(quantity)\r\n            .then(posts => posts)\r\n    })\r\n\r\nexport const postsSlice = createSlice({\r\n    name: 'posts',\r\n    initialState,\r\n    reducers: {\r\n        setAutoUpload: (state, action: PayloadAction<boolean>) => {\r\n            state.autoUpload = action.payload\r\n        },\r\n        setAutoUpdate: (state, action: PayloadAction<boolean>) => {\r\n            state.autoUpdate = action.payload\r\n            if (state.autoUpdate) {\r\n                state.posts = [...state.hiddenPosts, ...state.posts]\r\n                state.hiddenPosts = []\r\n            }\r\n        },\r\n        setClearOld: (state, action: PayloadAction<boolean>) => {\r\n            state.clearOld = action.payload\r\n        },\r\n        showHiddenPosts: (state) => {\r\n            state.posts = [...state.hiddenPosts, ...state.posts]\r\n            state.hiddenPosts = []\r\n        },\r\n        removePost: (state, action: PayloadAction<number>) => {\r\n            state.posts = state.posts.filter(post => post.id !== action.payload)\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(requestPosts.fulfilled, (state, action) => {\r\n            if (!action.payload.length) return\r\n\r\n            const postsLength = state.posts.length\r\n            const hiddenPostsLength = state.hiddenPosts.length\r\n            const totalPostsLength = postsLength + hiddenPostsLength\r\n\r\n            const removeLast = (posts: Array<PostType>) => posts.splice(-1, 1)\r\n\r\n            if (!state.autoUpdate && totalPostsLength >= 50 && postsLength) {\r\n                removeLast(state.posts)\r\n            }\r\n\r\n            if (!state.autoUpdate && totalPostsLength >= 50 && !postsLength) {\r\n                removeLast(state.hiddenPosts)\r\n            }\r\n\r\n            if (state.autoUpdate && postsLength >= 50) {\r\n                removeLast(state.posts)\r\n            }\r\n\r\n            if (state.autoUpdate) {\r\n                state.posts = [...action.payload, ...state.posts]\r\n            } else {\r\n                state.hiddenPosts = [...action.payload, ...state.hiddenPosts]\r\n            }\r\n        })\r\n    }\r\n})\r\n\r\nexport const { setAutoUpload, setAutoUpdate, setClearOld, showHiddenPosts, removePost } = postsSlice.actions\r\n\r\nexport const postsReducer =  postsSlice.reducer","import commentsAvatar from './assets/user.jpg'\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik'\r\nimport styles from './Comments.module.css'\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hooks'\r\nimport { setAutoUpdate } from '../../../../redux/postsSlice'\r\nimport React from 'react'\r\n\r\ninterface IComments {\r\n    commentsIsShow: boolean\r\n    setShowComments: (show: boolean) => void\r\n    comments: Array<string>\r\n    addComment: React.Dispatch<React.SetStateAction<Array<string>>>\r\n}\r\n\r\ninterface IComment {\r\n    comment: string\r\n    userName: string\r\n}\r\n\r\ninterface IWriteComment {\r\n    isAuth: boolean\r\n    addComment: React.Dispatch<React.SetStateAction<string[]>>\r\n    setShowComments: (show: boolean) => void\r\n    onCommentFieldFocus: () => void\r\n}\r\n\r\nexport const Comments: React.FC<IComments> = React.memo(({ commentsIsShow, setShowComments, comments, addComment }) => {\r\n    const userName = useAppSelector(state => state.auth.firstname + ' ' + state.auth.lastname)\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const onCommentFieldFocus = () => {\r\n        dispatch(setAutoUpdate(false))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {commentsIsShow &&\r\n                <>\r\n                    <div className={styles.hideComments} onClick={() => setShowComments(false)}>Hide comments</div>\r\n                    <div className={styles.commentsHolder}>\r\n                        {comments.map((comment, index) => <Comment key={index} comment={comment} userName={userName} />)}\r\n                    </div>\r\n                </>\r\n            }\r\n            <WriteComment isAuth={isAuth} addComment={addComment} setShowComments={setShowComments} onCommentFieldFocus={onCommentFieldFocus} />\r\n        </div>\r\n    )\r\n})\r\n\r\nconst Comment: React.FC<IComment> = ({ comment, userName }) => {  \r\n    return (\r\n        <div className={styles.comment}>\r\n            <div className={styles.commentsAvatarWrapper}>\r\n                <img className={styles.commentAvatar} src={commentsAvatar} alt=\"avatar\" />\r\n            </div>\r\n            <div className={styles.commentBody}>\r\n                <div className={styles.commentUsername}>{userName}</div>\r\n                <div className={styles.commentText}>{comment}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WriteComment: React.FC<IWriteComment> = ({ isAuth, addComment, setShowComments, onCommentFieldFocus }) => {\r\n    return (\r\n        <div className={styles.writeComment}>\r\n            { isAuth && <img className={styles.commentAvatar} src={commentsAvatar} alt=\"avatar\" /> }\r\n            <Formik\r\n                initialValues={{\r\n                    comment: ''\r\n                }}\r\n                onSubmit={(values, { resetForm, setFieldError }) => {\r\n                    if (!isAuth) {\r\n                        setFieldError('comment', 'You should be registered for writing comments')\r\n                        setTimeout(() => resetForm({ values: { comment: values.comment } }), 3000)\r\n                    } else if (!values.comment.length) {\r\n                        setFieldError('comment', 'Please enter something')\r\n                    } else {\r\n                        addComment(comments => [...comments, values.comment])\r\n                        setShowComments(true)\r\n                        resetForm()\r\n                    }\r\n                }}\r\n            >\r\n                <Form className={styles.commentForm}>\r\n                    <Field className={styles.commentFormInput} onFocus={onCommentFieldFocus} name='comment' type='text' placeholder='Write you comment here' />\r\n                    <ErrorMessage name='comment'>\r\n                        {(msg) => <div className={styles.errorMessage}>{msg}</div>}\r\n                    </ErrorMessage>\r\n                    <button className={styles.commentFormButton} type='submit' />\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import styles from './Post.module.css'\r\nimport React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { Comments } from './Comments/Comments'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport { removePost } from '../../../redux/postsSlice'\r\n\r\ninterface Ipost {\r\n    firstname: string\r\n    lastname: string\r\n    avatar: string\r\n    contentImage: string\r\n    postId: number\r\n}\r\n\r\nexport const Post: React.FC<Ipost> = ({ postId, firstname, lastname, avatar, contentImage }) => {\r\n    \r\n    let [likes, setLikes] = useState(getRandomCeilInt(0, 1000))\r\n    let [likedByMe, setLikedByMe] = useState(false)\r\n    let [views, setViews] = useState(getRandomCeilInt(likes, likes * 10))\r\n\r\n    let [commentsIsShow, setShowComments] = useState(false)\r\n    let [comments, addComment] = useState<Array<string>>([])\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    function getRandomCeilInt(min: number, max: number) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min + 1)) + min; //Include max and min\r\n    }\r\n\r\n    const onLikeIconClick = () => {\r\n        if (!likedByMe) {\r\n            setLikes(++likes)\r\n        } else {\r\n            setLikes(--likes)\r\n        }\r\n        setLikedByMe(!likedByMe)\r\n    }\r\n\r\n    const onCommentsIconClick = () => {\r\n        if (comments.length) {\r\n            setShowComments(!commentsIsShow)\r\n        }\r\n    }\r\n\r\n    const onCloseBtnClick = () => {\r\n        dispatch(removePost(postId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const LikesTimerId = setInterval(() => setLikes((likes) => ++likes), getRandomCeilInt(1000, 3000))\r\n        const ViewsTimerId = setInterval(() => setViews((views) => ++views), getRandomCeilInt(1000, 2000))\r\n\r\n        return () => {\r\n            clearInterval(LikesTimerId)\r\n            clearInterval(ViewsTimerId)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.postHeader}>\r\n                <img className={styles.postUserPhoto} src={avatar} alt=\"avatar\" />\r\n                <div className={styles.postInfo}>\r\n                    <div className={styles.postCreatorName}>{firstname + ' ' + lastname}</div>\r\n                    <div className={styles.postCreationDate}>14 Jun at 16:46:36</div>\r\n                </div>\r\n                <span className={styles.closeBtn} onClick={onCloseBtnClick}>\r\n                    <i className='far fa-window-close' />\r\n                </span>\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <img className={styles.postContentImage} src={contentImage} alt=\"content\" />\r\n            </div>\r\n            <div className={styles.postActivities}>\r\n                <div className={styles.postActivity} onClick={onLikeIconClick}>\r\n                    <div className={styles.postActivityIcon}>\r\n                        <i className={likedByMe ? 'fas fa-heart' : 'far fa-heart'}></i>\r\n                    </div>\r\n                    <div className={styles.likeCount}>{likes}</div>\r\n                </div>\r\n                <div className={styles.postActivity} onClick={onCommentsIconClick}>\r\n                    <div className={styles.postActivityIcon}>\r\n                        <i className='far fa-comment-alt'></i>\r\n                    </div>\r\n                    <div className={styles.commentCount}>{comments.length}</div>\r\n                </div>\r\n                <div className={styles.postActivity}>\r\n                    <div className={styles.postActivityIcon}>\r\n                        <i className='far fa-eye'></i>\r\n                    </div>\r\n                    <div className={styles.viewsCount}>{views}</div>\r\n                </div>\r\n            </div>\r\n            <Comments commentsIsShow={commentsIsShow} setShowComments={setShowComments} comments={comments} addComment={addComment} />\r\n        </div>\r\n    )\r\n}","import styles from './PostsWall.module.css'\r\nimport { Post } from './Post/Post'\r\nimport React, { useEffect } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { requestPosts, showHiddenPosts } from '../../redux/postsSlice'\r\nimport { MouseEventHandler } from 'react'\r\n\r\ninterface IShowNewPosts {\r\n    onShowNewPostsClick: MouseEventHandler\r\n    hiddenPostsLength: number\r\n}\r\n\r\nexport const PostsWall: React.FC = () => {\r\n    const posts = useAppSelector(state => state.posts.posts)\r\n    const hiddenPosts = useAppSelector(state => state.posts.hiddenPosts)\r\n    const autoUpload = useAppSelector(state => state.posts.autoUpload)\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(requestPosts(1))\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        let timerId: NodeJS.Timeout\r\n        if (autoUpload) timerId = setInterval(() => dispatch(requestPosts(1)), 5000)\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [autoUpload, dispatch])\r\n\r\n    const onShowNewPostsClick = () => {\r\n        dispatch(showHiddenPosts())\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.postsWall}>\r\n            { hiddenPosts.length !== 0 && <ShowNewPosts onShowNewPostsClick={onShowNewPostsClick} hiddenPostsLength={hiddenPosts.length} /> }\r\n            {\r\n                posts.map(post => <Post key={post.id}\r\n                                        postId={post.id}\r\n                                        firstname={post.author.firstname}\r\n                                        lastname={post.author.lastname}\r\n                                        avatar={post.author.avatarUrl}\r\n                                        contentImage={post.contentImageUrl}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ShowNewPosts: React.FC<IShowNewPosts> = ({onShowNewPostsClick, hiddenPostsLength}) => {\r\n        return (\r\n            <div className={styles.showNewPosts} onClick={onShowNewPostsClick}>\r\n                Show <b>{hiddenPostsLength}</b> new posts\r\n            </div>\r\n        )\r\n}","import { Formik, Form, Field } from 'formik'\r\nimport { setAuthData } from '../../../redux/authSlice'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport styles from '../Auth.module.css'\r\n\r\nexport let SignIn: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                firstname: '',\r\n                lastname: '',\r\n                password: ''\r\n            }}\r\n            onSubmit={(values) => {\r\n                dispatch(setAuthData({firstname: values.firstname, lastname: values.lastname}))\r\n            }}\r\n        >\r\n            <div className={styles.signUp}>\r\n                <Form>\r\n                    <h3 className={styles.title}>Hey!</h3>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='firstname' type='text' placeholder='Firstname'/>\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='lastname' type='text' placeholder='Lastname'/>\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='password' type='text' placeholder='Password'/>\r\n                    </div>\r\n                    <button className={styles.submit} type='submit'>SignIn</button>\r\n                </Form>\r\n            </div>\r\n        </Formik >\r\n    )\r\n}","import { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { setAuthData } from '../../../redux/authSlice'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport styles from '../Auth.module.css'\r\n\r\ninterface IError {\r\n    firstname: string\r\n    lastname: string\r\n    password: string\r\n}\r\n\r\nexport let SignUp: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                firstname: '',\r\n                lastname: '',\r\n                password: ''\r\n            }}\r\n            onSubmit={({firstname, lastname}) => {\r\n                firstname = firstname[0].toUpperCase() + firstname.slice(1)\r\n                lastname = lastname[0].toUpperCase() + lastname.slice(1)\r\n                dispatch(setAuthData({firstname, lastname}))\r\n            }}\r\n            validate={(values) => {\r\n                const errors = {} as IError\r\n\r\n                if (!values.password) {\r\n                    errors.password = 'Required'\r\n                }\r\n                if (!values.firstname) {\r\n                    errors.firstname = 'Required'\r\n                }\r\n                if (!values.lastname) {\r\n                    errors.lastname = 'Required'\r\n                }\r\n\r\n                return errors\r\n            }}\r\n        >\r\n            <div className={styles.signUp}>\r\n                <Form>\r\n                    <h3 className={styles.title}>Join Lazy Feed today</h3>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='firstname' type='text' placeholder='Firstname'/>\r\n                        <ErrorMessage name='firstname'>{(message) => <div className={styles.errorMessage}>{message}</div>}</ErrorMessage>\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='lastname' type='text' placeholder='Lastname'/>\r\n                        <ErrorMessage name='lastname'>{(message) => <div className={styles.errorMessage}>{message}</div>}</ErrorMessage>\r\n                    </div>\r\n                    <div className={styles.inputWrapper}>\r\n                        <Field className={styles.input} name='password' type='text' placeholder='Password'/>\r\n                        <ErrorMessage name='password'>{(message) => <div className={styles.errorMessage}>{message}</div>}</ErrorMessage>\r\n                    </div>\r\n                    <button className={styles.submit} type='submit'>SignUp</button>\r\n                </Form>\r\n            </div>\r\n        </Formik >\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { setSignInIsOpen, setSignUpIsOpen } from '../../redux/modalsSlice'\r\nimport styles from './Auth.module.css'\r\nimport { SignIn } from './SignIn/SignIn'\r\nimport { SignUp } from './SignUp/SignUp'\r\n\r\nexport let Auth: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n    const signUpIsOpen = useAppSelector(state => state.modals.signUp.isOpen)\r\n    const signInIsOpen = useAppSelector(state => state.modals.signIn.isOpen)\r\n\r\n    const onOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.target === e.currentTarget) {\r\n            dispatch(setSignUpIsOpen(false))\r\n            dispatch(setSignInIsOpen(false))\r\n        }\r\n    }\r\n    \r\n    if (signUpIsOpen || signInIsOpen) {\r\n        return (\r\n            <div className={styles.overlay} onClick={onOverlayClick}>\r\n                {signUpIsOpen ? <SignUp /> : signInIsOpen ? <SignIn/> : null}\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport styles from './ScrollTopBtn.module.css'\r\n\r\nexport const ScrollTopBtn: React.FC<{}> = () => {\r\n    let [isShow, showButton] = useState(false)\r\n\r\n    const onClick = () => {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n    }\r\n\r\n    useEffect(() => {\r\n        const onScroll = () => showButton(window.pageYOffset > 100)\r\n        window.addEventListener('scroll', onScroll)\r\n    }, [])\r\n\r\n    return (\r\n        isShow ?\r\n        <div className={styles.scrollTopBtn} onClick={onClick}>\r\n            <i className='far fa-caret-square-up'></i>\r\n        </div> \r\n        : null\r\n    )\r\n}","import React from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks'\r\nimport { setAutoUpdate, setAutoUpload, setClearOld } from '../../redux/postsSlice'\r\nimport styles from './Controls.module.css'\r\n\r\ninterface IControl {\r\n    controlName: string\r\n    isActive: boolean\r\n    onControlClick: () => void\r\n}\r\n\r\ninterface IToggle {\r\n    isActive: boolean\r\n}\r\n\r\ninterface IInfoField {\r\n    name: string\r\n    value: number\r\n}\r\n\r\nexport const Controls: React.FC = () => {\r\n\r\n    return (\r\n            <div className={styles.controls}>\r\n                <FeedControls />\r\n                <AppInfo />\r\n            </div>\r\n    )\r\n}\r\n\r\nconst FeedControls: React.FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n    const autoUpload = useAppSelector(state => state.posts.autoUpload)\r\n    const autoUpdate = useAppSelector(state => state.posts.autoUpdate)\r\n    const clearOld = useAppSelector(state => state.posts.clearOld)\r\n\r\n    const onAutoUploadClick = () => {\r\n        dispatch(setAutoUpload(!autoUpload))\r\n    }\r\n\r\n    const onAutoUpdateClick = () => {\r\n        dispatch(setAutoUpdate(!autoUpdate))\r\n    }\r\n\r\n    const onClearOldClick = () => {\r\n        dispatch(setClearOld(!clearOld))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4 className={styles.controlsTitle}>Feed Controls</h4>\r\n            <Control controlName='Autoupload' isActive={autoUpload} onControlClick={onAutoUploadClick} />\r\n            <Control controlName='Autoupdate' isActive={autoUpdate} onControlClick={onAutoUpdateClick} />\r\n            <Control controlName='Clear old' isActive={clearOld} onControlClick={onClearOldClick}/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Control: React.FC<IControl> = ({ controlName, isActive, onControlClick }) => {\r\n    return (\r\n        <div className={styles.control} onClick={onControlClick}>\r\n            <div className={styles.controlLabel}>{controlName}</div>\r\n            <Toggle isActive={isActive} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Toggle: React.FC<IToggle> = ({ isActive }) => {\r\n    const roundClassNames = isActive ? styles.round + ' ' + styles.roundSwitchedOn : styles.round;\r\n\r\n    return (\r\n        <div className={styles.toggle}>\r\n            <div className={roundClassNames} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AppInfo: React.FC<{}> = () => {\r\n    const totalPostsLength = useAppSelector(state => state.posts.posts.length + state.posts.hiddenPosts.length)\r\n    const onScreenPostsLength = useAppSelector(state => state.posts.posts.length)\r\n\r\n    return (\r\n        <>\r\n            <h4 className={styles.controlsTitle}>App Info</h4>\r\n            <InfoField name='Total posts' value={totalPostsLength} />\r\n            <InfoField name='On screen' value={onScreenPostsLength} />\r\n            <InfoField name ='Max posts' value={50} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst InfoField: React.FC<IInfoField> = ({ name, value }) => {\r\n    return (\r\n        <div className={styles.infoField}>\r\n            <span>{name}</span>\r\n            <span>{value}</span>\r\n        </div>\r\n    )\r\n}","import { Controls } from '../Controls'\r\nimport styles from './FixedControls.module.css'\r\n\r\nexport const FixedControls: React.FC<{}> = ({children}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.fixedControls}>\r\n                <Controls />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useAppDispatch, useAppSelector } from '../../../redux/hooks'\r\nimport { setControlsIsOpen } from '../../../redux/modalsSlice'\r\nimport { Controls } from '../Controls'\r\nimport styles from './LeftSideControls.module.css'\r\n\r\nexport const LeftSideControls: React.FC<{}> = () => {\r\n    const isOpen = useAppSelector(state => state.modals.controls.isOpen)\r\n    const dispatch = useAppDispatch()\r\n    \r\n    const overlayStyles = isOpen ? styles.overlay + ' ' + styles.open : styles.overlay\r\n\r\n    const onOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        if (e.currentTarget === e.target) {\r\n            dispatch(setControlsIsOpen())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={overlayStyles} onClick={onOverlayClick}>\r\n            <div className={styles.wrapper}>\r\n                <Controls />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import styles from './App.module.css';\nimport { Header } from './components/Header/Header';\nimport { PostsWall } from './components/PostsWall/PostsWall';\nimport { Auth } from './components/Auth/Auth';\nimport { ScrollTopBtn } from './components/ScrollTopBtn/ScrollTopBtn';\nimport { FixedControls } from './components/Controls/FixedControls/FixedControls';\nimport { LeftSideControls } from './components/Controls/LeftSideControls/LeftSideControls';\n\nfunction App() {\n    return (\n        <div className={styles.App}>\n            <Header />\n            <main className={styles.feed}>\n                <div className={styles.feedContainer}>\n                    <PostsWall />\n                    <FixedControls />\n                </div>\n            </main>\n            <Auth />\n            <ScrollTopBtn />\n            <LeftSideControls />\n        </div>\n    );\n}\nexport default App;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { authReducer } from \"./authSlice\";\r\nimport { modalsReducer } from \"./modalsSlice\";\r\nimport { postsReducer } from \"./postsSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        posts: postsReducer,\r\n        auth: authReducer,\r\n        modals: modalsReducer\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__7VWiG\",\"postHeader\":\"Post_postHeader__1MH5m\",\"postUserPhoto\":\"Post_postUserPhoto__uPql1\",\"postInfo\":\"Post_postInfo__1F6n8\",\"closeBtn\":\"Post_closeBtn__2-Yup\",\"postContent\":\"Post_postContent__2lqS9\",\"postContentImage\":\"Post_postContentImage__N4LbR\",\"postActivities\":\"Post_postActivities__F-49k\",\"postActivity\":\"Post_postActivity__36BI0\",\"postActivityIcon\":\"Post_postActivityIcon__1xtgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hideComments\":\"Comments_hideComments__3WcKo\",\"writeComment\":\"Comments_writeComment__3Ha1f\",\"commentAvatar\":\"Comments_commentAvatar__1O-3e\",\"commentForm\":\"Comments_commentForm__3lRcn\",\"commentFormInput\":\"Comments_commentFormInput__pwj6E\",\"commentFormButton\":\"Comments_commentFormButton__2hltp\",\"commentsHolder\":\"Comments_commentsHolder__2fwHe\",\"comment\":\"Comments_comment__2WfXa\",\"commentBody\":\"Comments_commentBody__2KSVr\",\"commentUsername\":\"Comments_commentUsername__1KcPX\",\"commentText\":\"Comments_commentText__3mmUg\",\"errorMessage\":\"Comments_errorMessage__1Ifnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__RCiui\",\"fixedHeader\":\"Header_fixedHeader__2ngQe\",\"headerContainer\":\"Header_headerContainer__3vJq9\",\"burgerMenu\":\"Header_burgerMenu__RsJ3G\",\"logo\":\"Header_logo__3EIES\",\"rightPanel\":\"Header_rightPanel__3E1o7\",\"userBar\":\"Header_userBar__2swOw\",\"userInfo\":\"Header_userInfo__3qHIM\",\"userAvatar\":\"Header_userAvatar__1tGR1\",\"authBtn\":\"Header_authBtn__3ZYOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2Dh15\",\"controlsTitle\":\"Controls_controlsTitle__1KJx8\",\"control\":\"Controls_control__2zjWr\",\"controlLabel\":\"Controls_controlLabel__1yI1T\",\"toggle\":\"Controls_toggle__1dgPh\",\"round\":\"Controls_round__1KHuN\",\"roundSwitchedOn\":\"Controls_roundSwitchedOn__2GGve\",\"infoField\":\"Controls_infoField__3WKgf\"};"],"sourceRoot":""}